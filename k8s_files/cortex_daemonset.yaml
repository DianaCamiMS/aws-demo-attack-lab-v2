apiVersion: v1
kind: Namespace
metadata:
  name: cortex-xdr
  labels:
    app.kubernetes.io/name: cortex-xdr
    pod-security.kubernetes.io/enforce: privileged
    pod-security.kubernetes.io/warn: privileged
    pod-security.kubernetes.io/audit: privileged
---

apiVersion: v1
kind: Secret
metadata:
  name: xdr-agent-deployment
  namespace: cortex-xdr
type: Opaque
stringData:
  distribution-id: "ff87e4ee5e7a489791cf0ee85d8b7a40"

---

apiVersion: v1
kind: ServiceAccount
metadata:
  name: xdr-agent-user
  namespace: cortex-xdr

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: xdr-agent-role
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: xdr-agent-role-binding-cortex-xdr
subjects:
- kind: ServiceAccount
  name: xdr-agent-user
  namespace: cortex-xdr
roleRef:
  kind: ClusterRole
  name: xdr-agent-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: cortex-docker-secret
  namespace: cortex-xdr
data:
  .dockerconfigjson: eyJhdXRocyI6IHsiaHR0cHM6Ly91cy1jZW50cmFsMS1kb2NrZXIucGtnLmRldiI6IHsidXNlcm5hbWUiOiAiX2pzb25fa2V5IiwgInBhc3N3b3JkIjogIntcbiAgXCJ0eXBlXCI6IFwic2VydmljZV9hY2NvdW50XCIsXG4gIFwicHJvamVjdF9pZFwiOiBcInhkci11cy0xMDAyMjM2MzE4NTgxXCIsXG4gIFwicHJpdmF0ZV9rZXlfaWRcIjogXCI1MjdjZDM3M2ZlY2U5YTlmOTIwZTU0NjdlZTE4MWY5MDk3NzZiMzEzXCIsXG4gIFwicHJpdmF0ZV9rZXlcIjogXCItLS0tLUJFR0lOIFBSSVZBVEUgS0VZLS0tLS1cXG5NSUlFdlFJQkFEQU5CZ2txaGtpRzl3MEJBUUVGQUFTQ0JLY3dnZ1NqQWdFQUFvSUJBUUNucmlJTW5BOGRQK292XFxudFJBNWlucXB2emsrTmpQTy9zbnd1ZWdUamNjdVJwMWw3T3l1Q3dtY1RzSzJRY2FHQm5qSVF0UkEyUGRibnBxcFxcbktXMFAvNjU0emRMMHhvbHFoUTY5azd3b0hncENUWURmcDJSem5aQWdheVJpdkJYRmhwQ3B4amljd05JQ0lvZitcXG41bmVjWCs3VjZzQVZrRHp4NDdmY1lMVThkeGFHT1RTZkM3M25TRmt2S3ZnaU9KVUpIc2hZb1d4a2NYdFZYY1QrXFxuZ0pEZSs5VFZCNVNTVWsvSlFoUENrN2dNZWRRTk8xOUtHZ3FLaWVBRkw5TDdnbUVwUDhoaWUwRlU4ZGtKaFZnQlxcbjg2Ung0L0hmZWQyMzQ3NWtHaEJxVEJWZFYzL1I2ZmtMcUJuR3c3ZnRTZ0lXbURBK1RMREwvUEV5QUNocllGTjNcXG4xMjYxUTdiN0FnTUJBQUVDZ2dFQUdYS2wxcE1TcWlZLzZqM3pvei8wZU1ib0x2RzJtdFRKUjJCTTFvdzBWK2k5XFxuOTRZN0JLT2IzRWlKdlhPdHZPWnc0STBLa3lMbEppeE9jdkRjdC9VSkFNQXFvc2ZFMENhTWJsSVBBcjc0WUoxTVxcbk96cU0xZzBVeVdRVC9CWVR4SGExTUJ4QXVFTFNrY3kxZTF2S2VGcmVMNWRMeis5TzNkNW8vTk1DZm1yaEZMMDNcXG52MEQwVkFMaXhFaWFvUEZxS3B5Z1RxcXhiU29yWXNNYlpyL21BalV2WUZCcFJaQ1p0aXlmUlpSQ3NxdGxueEpHXFxuTkhFUGtrOFFTT3VtT3dGNEhVQys5WHdUV1RjaDhnMEY1d21tQ0poT3dBQ0FXVUZsNUVzVk84Z3lqYlRaakVLSVxcbjZacHlCR3NtTlJXNWJCbm80QWtlSzZ1TlR1bzVsYitzdmFsakZaK1NBUUtCZ1FEZjJZMGZsdEp3bzVxL3FCWVJcXG5TSWdHbGoybEVvazN2ZGd4Q1BTTVVoRlNtclZub0RFWGdnR1lrbFZFMkowZXRwWVV6Vy9UTzM5cmFsNGFsMThkXFxuTGpaZkxIODRsKzBYQUhUQkFOSmdzRS9FaDMyK3RsTGwybGlxUWplNEpLUWVMa0ZlQ1IwY04wZW9iK0FzeFlGS1xcbm5nRVd2Nk13SEJpZjlDUEVLUzIvMlNUR0FRS0JnUUMvdzFwbDJuWC8rTEs3NXJocitrOEVXc2Q0WC9kMkd3WkpcXG51b01iQjhVUXhiTmxmNU0wV3MzNTNUcEpQZkROZklCT1hqRXpteExIalUzTEhLcExwMUFWWjR3cFYzUm9YYnB5XFxueWVnVGQvbVVBdGtjcUVTaWJTdE56N1UrTWpWZ1E0VElGVXIzakx3aERnS1dUeGhBem5EQkhLbkNRZXpTaFVRV1xcbnJkeTNYYjJVK3dLQmdRQ21nOStOd3hUUnczSUc1ZE5ja2ZiVjU0Yjl0MWNwaHVnK09hb29nNWZ0T2JaOTJsVUtcXG5acVFuU1p0eWRpd1N2OEhPd2E5UWsyN0tpYnBzejNOcWNvanhyVmtKMFVJRm5VbzhsQTdxNjl5NmxndDlCWVdQXFxuQkNoMnBvRnFVcDllOEF1aUZ1ZDNxTXQrU1pLWjIyVzlDdUpHZU5HOHBQblFhcno4VzZGemwrVGFBUUtCZ0VtS1xcbk5HZXRJT1dhVFlrTDBSdnZzVS9kTkhQd2NhbEVjZVBpZUJic291RnN3QUNqclNNOTA1SUlDaXMrYXRPUzlHMlpcXG5aOHIvcEhNTXVKRzFHNFhKMDBkeUgybFhWWmdVb2NVVnN6K01HaFZ1Qmk4Y1JMMzVtY3JNWmhoRkR2MHN4NFluXFxuekVrbEdweWVqOVZ1M2NFMHFqOFVxL0dJY0xiSFRyWlgxTFlwWitQekFvR0FWdkdGZ1JmUmMwWkZGN1k4OUEva1xcbjRJVTJRTzBYamNTMG5CTjdqejA3Mm9tOVFqdytZZk54OEg3RzdEVmtPLzQxOFh5aGtIbHAxdUhqV0sveXcyR1ZcXG5qNkMrWUhSOEp4bmV0Tno0QzBrcjcwWXlnK0JTeTZ0aW5qQjJ2cnpjUFl5TjFkNjRXbjczZWRmTDhvUTMvNURVXFxuVjlmNllYOFJFcHBEanFVRlpDQzVFV1E9XFxuLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLVxcblwiLFxuICBcImNsaWVudF9lbWFpbFwiOiBcInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDIyMzYzMTg1ODEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb21cIixcbiAgXCJjbGllbnRfaWRcIjogXCIxMTYwNzIxMTc1NzkyMzIzNzc4MjNcIixcbiAgXCJhdXRoX3VyaVwiOiBcImh0dHBzOi8vYWNjb3VudHMuZ29vZ2xlLmNvbS9vL29hdXRoMi9hdXRoXCIsXG4gIFwidG9rZW5fdXJpXCI6IFwiaHR0cHM6Ly9vYXV0aDIuZ29vZ2xlYXBpcy5jb20vdG9rZW5cIixcbiAgXCJhdXRoX3Byb3ZpZGVyX3g1MDlfY2VydF91cmxcIjogXCJodHRwczovL3d3dy5nb29nbGVhcGlzLmNvbS9vYXV0aDIvdjEvY2VydHNcIixcbiAgXCJjbGllbnRfeDUwOV9jZXJ0X3VybFwiOiBcImh0dHBzOi8vd3d3Lmdvb2dsZWFwaXMuY29tL3JvYm90L3YxL21ldGFkYXRhL3g1MDkvcHVsbC1pbWFnZSU0MHhkci11cy0xMDAyMjM2MzE4NTgxLmlhbS5nc2VydmljZWFjY291bnQuY29tXCIsXG4gIFwidW5pdmVyc2VfZG9tYWluXCI6IFwiZ29vZ2xlYXBpcy5jb21cIlxufVxuIiwgImVtYWlsIjogInB1bGwtaW1hZ2VAeGRyLXVzLTEwMDIyMzYzMTg1ODEuaWFtLmdzZXJ2aWNlYWNjb3VudC5jb20iLCAiYXV0aCI6ICJYMnB6YjI1ZmEyVjVPbnNpZEhsd1pTSTZJQ0p6WlhKMmFXTmxYMkZqWTI5MWJuUWlMQ0FpY0hKdmFtVmpkRjlwWkNJNklDSjRaSEl0ZFhNdE1UQXdNakl6TmpNeE9EVTRNU0lzSUNKd2NtbDJZWFJsWDJ0bGVWOXBaQ0k2SUNJMU1qZGpaRE0zTTJabFkyVTVZVGxtT1RJd1pUVTBOamRsWlRFNE1XWTVNRGszTnpaaU16RXpJaXdnSW5CeWFYWmhkR1ZmYTJWNUlqb2dJaTB0TFMwdFFrVkhTVTRnVUZKSlZrRlVSU0JMUlZrdExTMHRMVnh1VFVsSlJYWlJTVUpCUkVGT1FtZHJjV2hyYVVjNWR6QkNRVkZGUmtGQlUwTkNTMk4zWjJkVGFrRm5SVUZCYjBsQ1FWRkRibkpwU1UxdVFUaGtVQ3R2ZGx4dWRGSkJOV2x1Y1hCMmVtc3JUbXBRVHk5emJuZDFaV2RVYW1OamRWSndNV3czVDNsMVEzZHRZMVJ6U3pKUlkyRkhRbTVxU1ZGMFVrRXlVR1JpYm5CeGNGeHVTMWN3VUM4Mk5UUjZaRXd3ZUc5c2NXaFJOamxyTjNkdlNHZHdRMVJaUkdad01sSjZibHBCWjJGNVVtbDJRbGhHYUhCRGNIaHFhV04zVGtsRFNXOW1LMXh1Tlc1bFkxZ3JOMVkyYzBGV2EwUjZlRFEzWm1OWlRGVTRaSGhoUjA5VVUyWkROek51VTBacmRrdDJaMmxQU2xWS1NITm9XVzlYZUd0aldIUldXR05VSzF4dVowcEVaU3M1VkZaQ05WTlRWV3N2U2xGb1VFTnJOMmROWldSUlRrOHhPVXRIWjNGTGFXVkJSa3c1VERkbmJVVndVRGhvYVdVd1JsVTRaR3RLYUZablFseHVPRFpTZURRdlNHWmxaREl6TkRjMWEwZG9RbkZVUWxaa1ZqTXZValptYTB4eFFtNUhkemRtZEZOblNWZHRSRUVyVkV4RVRDOVFSWGxCUTJoeVdVWk9NMXh1TVRJMk1WRTNZamRCWjAxQ1FVRkZRMmRuUlVGSFdFdHNNWEJOVTNGcFdTODJhak42YjNvdk1HVk5ZbTlNZGtjeWJYUlVTbEl5UWsweGIzY3dWaXRwT1Z4dU9UUlpOMEpMVDJJelJXbEtkbGhQZEhaUFduYzBTVEJMYTNsTWJFcHBlRTlqZGtSamRDOVZTa0ZOUVhGdmMyWkZNRU5oVFdKc1NWQkJjamMwV1VveFRWeHVUM3B4VFRGbk1GVjVWMUZVTDBKWlZIaElZVEZOUW5oQmRVVk1VMnRqZVRGbE1YWkxaVVp5WlV3MVpFeDZLemxQTTJRMWJ5OU9UVU5tYlhKb1Jrd3dNMXh1ZGpCRU1GWkJUR2w0UldsaGIxQkdjVXR3ZVdkVWNYRjRZbE52Y2xselRXSmFjaTl0UVdwVmRsbEdRbkJTV2tOYWRHbDVabEphVWtOemNYUnNibmhLUjF4dVRraEZVR3RyT0ZGVFQzVnRUM2RHTkVoVlF5czVXSGRVVjFSamFEaG5NRVkxZDIxdFEwcG9UM2RCUTBGWFZVWnNOVVZ6Vms4NFozbHFZbFJhYWtWTFNWeHVObHB3ZVVKSGMyMU9VbGMxWWtKdWJ6UkJhMlZMTm5WT1ZIVnZOV3hpSzNOMllXeHFSbG9yVTBGUlMwSm5VVVJtTWxrd1pteDBTbmR2TlhFdmNVSlpVbHh1VTBsblIyeHFNbXhGYjJzemRtUm5lRU5RVTAxVmFFWlRiWEpXYm05RVJWaG5aMGRaYTJ4V1JUSktNR1YwY0ZsVmVsY3ZWRTh6T1hKaGJEUmhiREU0WkZ4dVRHcGFaa3hJT0RSc0t6QllRVWhVUWtGT1NtZHpSUzlGYURNeUszUnNUR3d5YkdseFVXcGxORXBMVVdWTWEwWmxRMUl3WTA0d1pXOWlLMEZ6ZUZsR1MxeHVibWRGVjNZMlRYZElRbWxtT1VOUVJVdFRNaTh5VTFSSFFWRkxRbWRSUXk5M01YQnNNbTVZTHl0TVN6YzFjbWh5SzJzNFJWZHpaRFJZTDJReVIzZGFTbHh1ZFc5TllrSTRWVkY0WWs1c1pqVk5NRmR6TXpVelZIQktVR1pFVG1aSlFrOVlha1Y2YlhoTVNHcFZNMHhJUzNCTWNERkJWbG8wZDNCV00xSnZXR0p3ZVZ4dWVXVm5WR1F2YlZWQmRHdGpjVVZUYVdKVGRFNTZOMVVyVFdwV1oxRTBWRWxHVlhJemFreDNhRVJuUzFkVWVHaEJlbTVFUWtoTGJrTlJaWHBUYUZWUlYxeHVjbVI1TTFoaU1sVXJkMHRDWjFGRGJXYzVLMDUzZUZSU2R6TkpSelZrVG1OclptSldOVFJpT1hReFkzQm9kV2NyVDJGdmIyYzFablJQWWxvNU1teFZTMXh1V25GUmJsTmFkSGxrYVhkVGRqaElUM2RoT1ZGck1qZExhV0p3YzNvelRuRmpiMnA0Y2xaclNqQlZTVVp1Vlc4NGJFRTNjVFk1ZVRac1ozUTVRbGxYVUZ4dVFrTm9NbkJ2Um5GVmNEbGxPRUYxYVVaMVpETnhUWFFyVTFwTFdqSXlWemxEZFVwSFpVNUhPSEJRYmxGaGNubzRWelpHZW13clZHRkJVVXRDWjBWdFMxeHVUa2RsZEVsUFYyRlVXV3RNTUZKMmRuTlZMMlJPU0ZCM1kyRnNSV05sVUdsbFFtSnpiM1ZHYzNkQlEycHlVMDA1TURWSlNVTnBjeXRoZEU5VE9VY3lXbHh1V2poeUwzQklUVTExU2tjeFJ6UllTakF3WkhsSU1teFlWbHBuVlc5alZWWnplaXROUjJoV2RVSnBPR05TVERNMWJXTnlUVnBvYUVaRWRqQnplRFJaYmx4dWVrVnJiRWR3ZVdWcU9WWjFNMk5GTUhGcU9GVnhMMGRKWTB4aVNGUnlXbGd4VEZsd1dpdFFla0Z2UjBGV2RrZEdaMUptVW1Nd1drWkdOMWs0T1VFdmExeHVORWxWTWxGUE1GaHFZMU13YmtKT04ycDZNRGN5YjIwNVVXcDNLMWxtVG5nNFNEZEhOMFJXYTA4dk5ERTRXSGxvYTBoc2NERjFTR3BYU3k5NWR6SkhWbHh1YWpaREsxbElVamhLZUc1bGRFNTZORU13YTNJM01GbDVaeXRDVTNrMmRHbHVha0l5ZG5KNlkxQlplVTR4WkRZMFYyNDNNMlZrWmt3NGIxRXpMelZFVlZ4dVZqbG1ObGxZT0ZKRmNIQkVhbkZWUmxwRFF6VkZWMUU5WEc0dExTMHRMVVZPUkNCUVVrbFdRVlJGSUV0RldTMHRMUzB0WEc0aUxDQWlZMnhwWlc1MFgyVnRZV2xzSWpvZ0luQjFiR3d0YVcxaFoyVkFlR1J5TFhWekxURXdNREl5TXpZek1UZzFPREV1YVdGdExtZHpaWEoyYVdObFlXTmpiM1Z1ZEM1amIyMGlMQ0FpWTJ4cFpXNTBYMmxrSWpvZ0lqRXhOakEzTWpFeE56VTNPVEl6TWpNM056Z3lNeUlzSUNKaGRYUm9YM1Z5YVNJNklDSm9kSFJ3Y3pvdkwyRmpZMjkxYm5SekxtZHZiMmRzWlM1amIyMHZieTl2WVhWMGFESXZZWFYwYUNJc0lDSjBiMnRsYmw5MWNta2lPaUFpYUhSMGNITTZMeTl2WVhWMGFESXVaMjl2WjJ4bFlYQnBjeTVqYjIwdmRHOXJaVzRpTENBaVlYVjBhRjl3Y205MmFXUmxjbDk0TlRBNVgyTmxjblJmZFhKc0lqb2dJbWgwZEhCek9pOHZkM2QzTG1kdmIyZHNaV0Z3YVhNdVkyOXRMMjloZFhSb01pOTJNUzlqWlhKMGN5SXNJQ0pqYkdsbGJuUmZlRFV3T1Y5alpYSjBYM1Z5YkNJNklDSm9kSFJ3Y3pvdkwzZDNkeTVuYjI5bmJHVmhjR2x6TG1OdmJTOXliMkp2ZEM5Mk1TOXRaWFJoWkdGMFlTOTROVEE1TDNCMWJHd3RhVzFoWjJVbE5EQjRaSEl0ZFhNdE1UQXdNakl6TmpNeE9EVTRNUzVwWVcwdVozTmxjblpwWTJWaFkyTnZkVzUwTG1OdmJTSXNJQ0oxYm1sMlpYSnpaVjlrYjIxaGFXNGlPaUFpWjI5dloyeGxZWEJwY3k1amIyMGlmUT09In19fQ==

---

---

apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cortex-agent
  namespace: cortex-xdr
  labels:

    app.kubernetes.io/name: cortex-agent
    app.kubernetes.io/part-of: cortex
    app.kubernetes.io/component: agent
    app.kubernetes.io/version: "latest"

spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: cortex-agent

  updateStrategy:
    type: RollingUpdate

  template:
    metadata:
      labels:
        app.kubernetes.io/name: cortex-agent
      annotations:

        container.apparmor.security.beta.kubernetes.io/cortex-agent: unconfined

    spec:
      serviceAccountName: xdr-agent-user

      nodeSelector:
        kubernetes.io/os: linux

      hostNetwork: true
      hostPID: true
      hostIPC: true
      
      tolerations:

      - key: node-role.kubernetes.io/master
        effect: NoSchedule

      containers:
      - name: cortex-agent
        image: us-central1-docker.pkg.dev/xdr-us-1002236318581/agent-docker/cortex-agent:latest

        securityContext:
          capabilities:
            add:
            - SYS_ADMIN
            - SYSLOG
            - SYS_CHROOT
            - SYS_MODULE
            - SYS_PTRACE
            - SYS_RESOURCE
            - SYS_RAWIO
            - DAC_OVERRIDE
            - DAC_READ_SEARCH
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - FOWNER
            - KILL
            - SETGID
            - SETUID

        env:
        - name: XDR_HOST_ROOT
          value: "/host-fs"
        - name: XDR_POD_INFO
          value: "/var/run/pod-info"
        - name: XDR_CLUSTER_NAME_URL
          value: "metadata2"
        - name: XDR_CLUSTER_NAME
          value: ""
        - name: XDR_VAR_LOG_HOST_PATH
          value: "/var/log"

        volumeMounts:

        - name: host-fs
          mountPath: /host-fs
          readOnly: true

        - name: var-log
          mountPath: /var/log

        - name: host-km-directory
          mountPath: /lib/modules

        - name: pod-info
          mountPath: /var/run/pod-info
          readOnly: true

        - name: agent-ids
          mountPath: /etc/traps

        - name: deployment-secrets
          mountPath: /opt/traps/config/deployment
          readOnly: true

        resources:
          requests:
            cpu: "200m"
            memory: "600Mi"
          limits:
            cpu: "1500m"
            memory: "2Gi"

      terminationGracePeriodSeconds: 90

      volumes:
      - name: host-fs
        hostPath:
          path: /
          type: Directory

      - name: var-log
        hostPath:
          path: "/var/log"
          type: DirectoryOrCreate

      - name: host-km-directory
        hostPath:
          path: /lib/modules

      - name: pod-info
        downwardAPI:
          items:
          - path: uid
            fieldRef:
              fieldPath: metadata.uid
          - path: name
            fieldRef:
              fieldPath: metadata.name
          - path: labels
            fieldRef:
              fieldPath: metadata.labels
          - path: annotations
            fieldRef:
              fieldPath: metadata.annotations
      - name: agent-ids
        hostPath:
            path: /etc/traps
            type: DirectoryOrCreate

      - name: deployment-secrets
        secret:
          secretName: xdr-agent-deployment
      
      imagePullSecrets:
      - name: cortex-docker-secret